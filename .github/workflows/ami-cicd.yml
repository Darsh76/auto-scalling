name: Build and Deploy AMI

on:
  push:
    branches: [ main ]

jobs:
  bake-and-deploy:
    name: Bake AMI & Roll ASG
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:   ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:          ${{ secrets.AWS_REGION }}

      - name: Install Packer
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install -y packer

      - name: Bake AMI via Packer
        id: packer
        run: |
          packer build \
            -var "aws_region=${{ secrets.AWS_REGION }}" \
            -var "ami_name=myapp-${{ github.sha }}" \
            packer.json | tee packer.log
          # grab last AMI ID from the output
          AMI_ID=$(grep 'AMI:' packer.log | awk '{print $2}' | tail -1)
          echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV

      - name: Create new LT version
        id: newlt
        run: |
          aws ec2 create-launch-template-version \
            --launch-template-id ${{ secrets.LAUNCH_TEMPLATE_ID }} \
            --source-version 1 \
            --launch-template-data "{\"ImageId\":\"${AMI_ID}\"}"
          # fetch latest version
          VERSION=$(aws ec2 describe-launch-template-versions \
            --launch-template-id ${{ secrets.LAUNCH_TEMPLATE_ID }} \
            --query "sort_by(LaunchTemplateVersions,&VersionNumber)[-1].VersionNumber" \
            --output text)
          echo "LT_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update ASG to new version
        run: |
          aws autoscaling update-auto-scaling-group \
            --auto-scaling-group-name ${{ secrets.ASG_NAME }} \
            --launch-template "LaunchTemplateId=${{ secrets.LAUNCH_TEMPLATE_ID }},Version=${LT_VERSION}"

      - name: Start Instance Refresh
        run: |
          aws autoscaling start-instance-refresh \
            --auto-scaling-group-name ${{ secrets.ASG_NAME }} \
            --strategy Rolling

