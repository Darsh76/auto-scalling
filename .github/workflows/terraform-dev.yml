name: Terraform Dev CI/CD

on:
  # Plan on dev pushes (and PRs to dev)
  pull_request:
    branches: [ dev ]
    paths:
      - 'terraform/project-root-remote/development/**'
  push:
    branches: [ dev, main ]
    paths:
      - 'terraform/project-root-remote/development/**'

permissions:
  contents: write
  pull-requests: write

env:
  TF_VERSION: 1.5.0
  TF_WORKING_DIR: terraform/project-root-remote/development/
  AWS_REGION: us-west-2

jobs:
  # ───────────────────────────
  # 1) Plan on dev
  # ───────────────────────────
  plan-dev:
    name: 🔍 Plan on dev
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/dev' }}
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS (dev)
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Fmt & Validate
        run: |
          terraform fmt -check -recursive
          terraform validate

      - name: Terraform Plan
        run: terraform plan -no-color -out=tfplan.binary

      - name: Show Plan Summary
        run: terraform show -no-color tfplan.binary >> $GITHUB_STEP_SUMMARY

  # ───────────────────────────
  # 2) Auto-create PR dev → main
  # ───────────────────────────
  auto-pr:
    name: 🤖 Auto-PR dev → main
    needs: plan-dev
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/dev' && github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v4

      - name: Create or update PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: ci:sync dev → main
          title:  Auto PR sync dev → main
          body: This PR was automatically generated by GitHub Actions.
          base: main
          branch: dev
          draft: false

  # ───────────────────────────
  # 3) Apply on main
  # ───────────────────────────
  apply-main:
    name: 🚀 Apply on main
    runs-on: ubuntu-latest
    needs: auto-pr
    if: ${{ github.ref == 'refs/heads/main' }}
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS (prod)
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve
