name: Terraform Dev CI/CD

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'terraform/project-root-remote/development/**'
  pull_request:
    branches:
      - dev
    paths:
      - 'terraform/project-root-remote/development/**'

env:
  TF_VERSION: 1.5.0
  TF_WORKING_DIR: terraform/project-root-remote/development/

jobs:
  # 1Ô∏è‚É£ Push to main ‚Üí open a PR into dev
  create-pr:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: üìù Create PR to dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: Terraform infra changes"
          branch: infra-pr-${{ github.run_id }}
          base: dev
          title: "üîß Terraform updates for dev"
          body: |
            This PR contains the latest Terraform changes for the **development** environment.

  # 2Ô∏è‚É£ PR into dev ‚Üí fmt, validate, plan & comment
  plan:
    if: github.event_name == 'pull_request'
    name: üîç Plan dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform fmt (check)
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform fmt -check -recursive

      - name: Terraform validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init -input=false
          terraform validate

      - name: Init & Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init -reconfigure -input=false
          terraform plan -out=tfplan.binary -lock-timeout=5m -input=false

      - name: Comment plan on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: ${{ env.TF_WORKING_DIR }}/tfplan.binary

  # 3Ô∏è‚É£ Merge PR ‚Üí push to dev ‚Üí replan & apply
  apply:
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    name: üöÄ Apply dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Init, Plan & Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init -reconfigure -input=false
          terraform plan -out=tfplan.binary -lock-timeout=5m -input=false
          terraform apply -auto-approve tfplan.binary
